package com.glide.api.sdk;

import com.glide.api.sdk.client.HttpClient;
import com.glide.api.sdk.exceptions.ApiException;
import com.glide.api.sdk.models.requests.RequestModel;
import com.glide.api.sdk.models.responses.ResponseModel;
import com.glide.api.sdk.resources.*;

import lombok.NonNull;

public interface IGlideApiClient {
    // DO NOT remove these comments since they serve as anchors for code autogeneration
    /* Autogenerated-root-resource-interface-getters-setters begins */
    public ITransactionsResource getTransactions();
    public void setTransactions(ITransactionsResource transactions);
    public IUsersResource getUsers();
    public void setUsers(IUsersResource users);
    /* Autogenerated-root-resource-interface-getters-setters ends */
    public ResponseModel get(boolean authRequired, Class<? extends ResponseModel> modelCls, String path, HttpClient.QueryParams qParams) throws ApiException;
    public ResponseModel get(boolean authRequired, Class<? extends ResponseModel> modelCls, String path) throws ApiException;
    public ResponseModel getWithAuth(Class<? extends ResponseModel> modelCls, String path, HttpClient.QueryParams qParams) throws ApiException;
    public ResponseModel getWithAuth(Class<? extends ResponseModel> modelCls, String path) throws ApiException;
    public ResponseModel post(boolean authRequired, Class<? extends ResponseModel> modelCls, String path, HttpClient.QueryParams qParams, RequestModel payload) throws ApiException;
    public ResponseModel post(boolean authRequired, Class<? extends ResponseModel> modelCls, String path, RequestModel payload) throws ApiException;
    public ResponseModel post(boolean authRequired, Class<? extends ResponseModel> modelCls, String path, HttpClient.QueryParams qParams) throws ApiException;
    public ResponseModel postWithAuth(Class<? extends ResponseModel> modelCls, String path, HttpClient.QueryParams qParams, RequestModel payload) throws ApiException;
    public ResponseModel postWithNoAuth(Class<? extends ResponseModel> modelCls, String path, HttpClient.QueryParams qParams, RequestModel payload) throws ApiException;
    public ResponseModel postWithAuth(Class<? extends ResponseModel> modelCls, String path, RequestModel payload) throws ApiException;
    public ResponseModel postWithNoAuth(Class<? extends ResponseModel> modelCls, String path, RequestModel payload) throws ApiException;
    public IImperonsationResponse startImpersonating(@NonNull String sub, String[] scopes) throws ApiException;
    public IImperonsationResponse startImpersonating(@NonNull String sub) throws ApiException;
    public void stopImpersonating();
    public boolean isImpersonating();
    public String impersonatingSub();
    public String[] impersonatingScopes();
}
